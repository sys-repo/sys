name: ci

on:
  push:
    branches:
      - main
      - phil-work

jobs:
  deno:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # The OIDC/ID token is used for authentication with JSR.
    environment: dev
    env:
      TEST_SAMPLE: ${{ vars.TEST_SAMPLE }}
      DENO_SUBHOSTING_ACCESS_TOKEN: ${{ secrets.DENO_SUBHOSTING_ACCESS_TOKEN }}
      DENO_SUBHOSTING_DEPLOY_ORG_ID: ${{ vars.DENO_SUBHOSTING_DEPLOY_ORG_ID }}
      PRIVY_APP_ID: ${{ vars.PRIVY_APP_ID }}
      PRIVY_APP_SECRET: ${{ secrets.PRIVY_APP_SECRET }}

    steps:
      - uses: actions/checkout@v3

      - name: 'Install ESM Runtime: Deno 2.x'
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.4.x

      - name: 'Install ES Modules from JSR: https://jsr.io/@sys'
        run: deno task help

      - name: Deno Info
        run: deno info && deno --version

      - name: System Info
        run: deno task help


      - name: publish module → "@sys/types"
        run: |
          cd code/sys/types
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/std"
        run: |
          cd code/sys/std
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/color"
        run: |
          cd code/sys/color
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/cli"
        run: |
          cd code/sys/cli
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/crypto"
        run: |
          cd code/sys/crypto
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/fs"
        run: |
          cd code/sys/fs
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/schema"
        run: |
          cd code/sys/schema
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/testing"
        run: |
          cd code/sys/testing
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/process"
        run: |
          cd code/sys/process
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/http"
        run: |
          cd code/sys/http
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/cmd"
        run: |
          cd code/sys/cmd
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/text"
        run: |
          cd code/sys/text
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/tmpl-engine"
        run: |
          cd code/sys/tmpl-engine
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/jsr"
        run: |
          cd code/sys/jsr
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/ui-css"
        run: |
          cd code/sys.ui/ui-css
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/ui-dom"
        run: |
          cd code/sys.ui/ui-dom
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/ui-react"
        run: |
          cd code/sys.ui/ui-react
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/ui-react-devharness"
        run: |
          cd code/sys.ui/ui-react-devharness
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/ui-react-components"
        run: |
          cd code/sys.ui/ui-react-components
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/ui-factory"
        run: |
          cd code/sys.ui/ui-factory
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/driver-automerge"
        run: |
          cd code/sys.driver/driver-automerge
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/driver-deno"
        run: |
          cd code/sys.driver/driver-deno
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/driver-farcaster"
        run: |
          cd code/sys.driver/driver-farcaster
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/driver-mastra"
        run: |
          cd code/sys.driver/driver-mastra
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/driver-monaco"
        run: |
          cd code/sys.driver/driver-monaco
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/driver-vite"
        run: |
          cd code/sys.driver/driver-vite
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/driver-peerjs"
        run: |
          cd code/sys.driver/driver-peerjs
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/driver-prosemirror"
        run: |
          cd code/sys.driver/driver-prosemirror
          deno task test --parallel
          deno publish --allow-dirty

      - name: publish module → "@sys/dev"
        run: |
          cd code/sys.dev
          deno task test --parallel
          deno publish --allow-dirty
